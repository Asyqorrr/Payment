// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0

package db

import (
	"context"
)

type Querier interface {
	CreateEntity(ctx context.Context, entityName string) (*EntityType, error)
	CreateUserAccount(ctx context.Context, arg CreateUserAccountParams) (*UserAccount, error)
	DeleteEntity(ctx context.Context, entityID int32) error
	DeleteUserAccount(ctx context.Context, usacUserID *int32) error
	FindAllEntity(ctx context.Context) ([]*EntityType, error)
	FindEntityById(ctx context.Context, entityID int32) (*EntityType, error)
	FindUserAccountByAccno(ctx context.Context, usacAccountNo *string) (*FindUserAccountByAccnoRow, error)
	GetAllTransactionInfo(ctx context.Context) ([]*GetAllTransactionInfoRow, error)
	GetAllUserAccount(ctx context.Context) ([]*GetAllUserAccountRow, error)
	GetTransactionFrom(ctx context.Context, patrxAcctnoFrom *string) ([]*GetTransactionFromRow, error)
	GetTransactionFromAndTo(ctx context.Context, arg GetTransactionFromAndToParams) ([]*PaymentTransaction, error)
	GetTransactionTo(ctx context.Context, patrxAcctnoTo *string) ([]*GetTransactionToRow, error)
	SetorTransaction(ctx context.Context, arg SetorTransactionParams) (*PaymentTransaction, error)
	Transfer(ctx context.Context, arg TransferParams) (*PaymentTransaction, error)
	TransferReceive(ctx context.Context, arg TransferReceiveParams) (*PaymentTransaction, error)
	TransferSend(ctx context.Context, arg TransferSendParams) (*PaymentTransaction, error)
	UpdateBalance(ctx context.Context, arg UpdateBalanceParams) (*UserAccount, error)
	UpdateEntity(ctx context.Context, arg UpdateEntityParams) (*EntityType, error)
}

var _ Querier = (*Queries)(nil)
